spring:
  data.mongodb:
    host: ${SPRING_DATA_MONGODB_HOST:localhost}
    port: ${SPRING_DATA_MONGODB_PORT:27017}
    authentication-database: ${SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE:admin}
  datasource:
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 5000
      idle-timeout: 600000
      max-lifetime: 1800000
      minimumIdle: 2
      maximum-pool-size: 5
  jpa:
    show-sql: true
    properties.hibernate:
      format_sql: true
      dialect: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: validate
    generate-ddl: false
    open-in-view: false
  flyway:
    baseline-on-migrate: true
    enabled: true
    baseline-description: "init"
    baseline-version: 0
  kafka:
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      bootstrap-servers: localhost:9092
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
  cloud.config:
    override-none: true
    allow-override: true
    override-system-properties: false
  mail:
    host: localhost
    port: 1025
    properties:
      mail:
        smtp.trust: "*"
        auth: true
        starttls.enabled: true
        connectiontimeout: 5000
        timeout: 3000
        writetimeout: 5000
eureka:
  instance:
    hostname: ${APP_EUREKA_HOST_NAME:localhost}
  client.service-url:
    defaultZone: ${APP_EUREKA_CLIENT_SERVICE_URL:http://localhost:8761/eureka}

name:
  value: mikasa

management.tracing.sampling:
  probability: 1.0
