<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="5a6ed731-85d6-4a0e-b159-d2ef8b33e2f8" name="Changes" comment="rename all service to add suffix service">
      <change afterPath="$PROJECT_DIR$/services/config-server/src/main/resources/configurations/order-service.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/order-service/build.gradle.kts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/order-service/settings.gradle.kts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/order-service/src/main/java/com/ecommer/order/OrderServiceApplication.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/order-service/src/main/java/com/ecommer/order/common/Constant.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/order-service/src/main/java/com/ecommer/order/config/KafkaOrderTopicConfig.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/order-service/src/main/java/com/ecommer/order/config/RestTemplateConfig.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/order-service/src/main/java/com/ecommer/order/controller/CustomerOrderController.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/order-service/src/main/java/com/ecommer/order/controller/CustomerOrderLineController.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/order-service/src/main/java/com/ecommer/order/error/exception/BusinessException.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/order-service/src/main/java/com/ecommer/order/error/handler/ErrorResponse.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/order-service/src/main/java/com/ecommer/order/error/handler/GlobalExceptionHandler.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/order-service/src/main/java/com/ecommer/order/model/entity/CustomerOrder.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/order-service/src/main/java/com/ecommer/order/model/entity/CustomerOrderLine.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/order-service/src/main/java/com/ecommer/order/model/enumerated/PaymentMethod.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/order-service/src/main/java/com/ecommer/order/model/request/CustomerOrderLineRequest.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/order-service/src/main/java/com/ecommer/order/model/request/CustomerOrderRequest.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/order-service/src/main/java/com/ecommer/order/model/request/PaymentRequest.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/order-service/src/main/java/com/ecommer/order/model/request/PurchaseRequest.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/order-service/src/main/java/com/ecommer/order/model/response/CustomerOrderLineResponse.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/order-service/src/main/java/com/ecommer/order/model/response/CustomerOrderResponse.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/order-service/src/main/java/com/ecommer/order/model/response/CustomerResponse.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/order-service/src/main/java/com/ecommer/order/model/response/OrderConfirmation.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/order-service/src/main/java/com/ecommer/order/model/response/PurchaseResponse.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/order-service/src/main/java/com/ecommer/order/repository/CustomerOrderLineRepository.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/order-service/src/main/java/com/ecommer/order/repository/CustomerOrderRepository.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/order-service/src/main/java/com/ecommer/order/service/CreateCustomerOrderService.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/order-service/src/main/java/com/ecommer/order/service/CustomerOrderLineService.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/order-service/src/main/java/com/ecommer/order/service/FindAllCustomerOrderService.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/order-service/src/main/java/com/ecommer/order/service/FindCustomerOrderService.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/order-service/src/main/java/com/ecommer/order/service/integration/CustomerClient.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/order-service/src/main/java/com/ecommer/order/service/integration/PaymentClient.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/order-service/src/main/java/com/ecommer/order/service/integration/ProductClient.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/order-service/src/main/java/com/ecommer/order/service/producer/CustomerOrderProducer.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/order-service/src/main/resources/application.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/order-service/src/main/resources/db/migration/V1__init_database.sql" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/order-service/src/test/java/com/ecommer/order/OrderServiceApplicationTests.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/compiler.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/compiler.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/dataSources.local.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/dataSources.local.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/dataSources/0b4b6acf-60a0-4778-b37f-83f2c6f5762c.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/dataSources/0b4b6acf-60a0-4778-b37f-83f2c6f5762c.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/dataSources/0b4b6acf-60a0-4778-b37f-83f2c6f5762c/storage_v2/_src_/database/postgres.edMnLQ/schema/public.abK9xQ.meta" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/dataSources/0b4b6acf-60a0-4778-b37f-83f2c6f5762c/storage_v2/_src_/database/postgres.edMnLQ/schema/public.abK9xQ.meta" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/gradle.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/gradle.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/modules.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/sqldialects.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/sqldialects.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/services/config-server/src/main/resources/configurations/application.yml" beforeDir="false" afterPath="$PROJECT_DIR$/services/config-server/src/main/resources/configurations/application.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/services/config-server/src/main/resources/configurations/discovery-service.yml" beforeDir="false" afterPath="$PROJECT_DIR$/services/config-server/src/main/resources/configurations/discovery-server.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/services/config-server/src/main/resources/configurations/product-service.yml" beforeDir="false" afterPath="$PROJECT_DIR$/services/config-server/src/main/resources/configurations/product-service.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/services/discovery-server/src/main/resources/application.yml" beforeDir="false" afterPath="$PROJECT_DIR$/services/discovery-server/src/main/resources/application.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/services/product/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/services/order-service/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/services/product/gradle/wrapper/gradle-wrapper.jar" beforeDir="false" afterPath="$PROJECT_DIR$/services/order-service/gradle/wrapper/gradle-wrapper.jar" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/services/product/gradle/wrapper/gradle-wrapper.properties" beforeDir="false" afterPath="$PROJECT_DIR$/services/order-service/gradle/wrapper/gradle-wrapper.properties" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/services/product/gradlew" beforeDir="false" afterPath="$PROJECT_DIR$/services/order-service/gradlew" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/services/product/gradlew.bat" beforeDir="false" afterPath="$PROJECT_DIR$/services/order-service/gradlew.bat" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ChangesViewManager">
    <option name="groupingKeys">
      <option value="directory" />
    </option>
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$/services/config-server">
      <ProjectState />
    </projectState>
    <projectState path="$PROJECT_DIR$/services/customer">
      <ProjectState />
    </projectState>
    <projectState path="$PROJECT_DIR$/services/customer-service">
      <ProjectState />
    </projectState>
    <projectState path="$PROJECT_DIR$/services/discovery">
      <ProjectState />
    </projectState>
    <projectState path="$PROJECT_DIR$/services/discovery-server">
      <ProjectState />
    </projectState>
    <projectState path="$PROJECT_DIR$/services/order-service">
      <ProjectState />
    </projectState>
    <projectState path="$PROJECT_DIR$/services/product">
      <ProjectState />
    </projectState>
    <projectState path="$PROJECT_DIR$/services/product-service">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="GRADLE">
      <state>
        <task path="$PROJECT_DIR$/services/config-server">
          <activation />
        </task>
        <task path="$PROJECT_DIR$/services/customer">
          <activation />
        </task>
        <task path="$PROJECT_DIR$/services/discovery">
          <activation />
        </task>
        <task path="$PROJECT_DIR$/services/product">
          <activation />
        </task>
        <projects_view>
          <tree_state>
            <expand />
            <select />
          </tree_state>
        </projects_view>
      </state>
    </system>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="HTTP Request" />
        <option value="Enum" />
        <option value="Interface" />
        <option value="Record" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="main" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;teukumunawark&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/teukumunawark/microservices-mono-repo.git&quot;,
    &quot;accountId&quot;: &quot;2b6157a7-aa8b-477e-b38b-ce46efc1f6a3&quot;
  }
}</component>
  <component name="JpbToolWindowState">
    <option name="isToolWindowVisible" value="false" />
  </component>
  <component name="KubernetesApiPersistence">{}</component>
  <component name="KubernetesApiProvider">{
  &quot;isMigrated&quot;: true
}</component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 7
}</component>
  <component name="ProjectId" id="2imknkKaehK0QVJcHr4G906wPNv" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="autoscrollFromSource" value="true" />
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
    <option name="showVisibilityIcons" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Docker.docker-compose.yml: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.Build config-server.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.Build customer-service.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.Build customer.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.Build discovery-server.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.Build discovery.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.Build order-service.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.Build product-service.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.Build product.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.Download Sources.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.config-server [clean].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.customer [clean].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.discovery [clean].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.product [clean].executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.customer-api | #1.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.customer-api | #2.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.customer-api | #5.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.product-api | Create Product.executor&quot;: &quot;Run&quot;,
    &quot;Kotlin script (Beta).build.gradle.kts.executor&quot;: &quot;Run&quot;,
    &quot;RequestMappingsPanelOrder0&quot;: &quot;0&quot;,
    &quot;RequestMappingsPanelOrder1&quot;: &quot;1&quot;,
    &quot;RequestMappingsPanelWidth0&quot;: &quot;75&quot;,
    &quot;RequestMappingsPanelWidth1&quot;: &quot;75&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;SONARLINT_PRECOMMIT_ANALYSIS&quot;: &quot;true&quot;,
    &quot;Spring Boot.ConfigServerApplication.executor&quot;: &quot;Run&quot;,
    &quot;Spring Boot.CustomerApplication.executor&quot;: &quot;Run&quot;,
    &quot;Spring Boot.DiscoveryApplication.executor&quot;: &quot;Run&quot;,
    &quot;Spring Boot.OrderServiceApplication.executor&quot;: &quot;Run&quot;,
    &quot;Spring Boot.ProductApplication.executor&quot;: &quot;Run&quot;,
    &quot;git-widget-placeholder&quot;: &quot;feature/order-service&quot;,
    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Development Space/SpringBoot/microservices-mono-repo/services/product-service/build.gradle.kts&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.stylelint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.stylelint&quot;: &quot;&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,
    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,
    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,
    &quot;run.configurations.included.in.services&quot;: &quot;true&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settingsdialog.project.gradle&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  },
  &quot;keyToStringList&quot;: {
    &quot;DatabaseDriversLRU&quot;: [
      &quot;postgresql&quot;,
      &quot;mongo&quot;
    ]
  }
}</component>
  <component name="ReactorSettings">
    <option name="notificationShown" value="true" />
  </component>
  <component name="RecentsManager">
    <key name="CreateClassDialog.RecentsKey">
      <recent name="com.ecommer.order.service" />
      <recent name="com.ecommer.order.model.response" />
      <recent name="com.ecommer.order.model.request" />
      <recent name="com.ecommer.order.service.producer" />
      <recent name="com.ecommer.order.repository" />
    </key>
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Development Space\SpringBoot\microservices-mono-repo" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Development Space\SpringBoot\microservices-mono-repo\curl" />
    </key>
    <key name="CopyClassDialog.RECENTS_KEY">
      <recent name="com.ecommer.order.error.handler" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="configurationTypes">
      <set>
        <option value="MicronautRunConfigurationType" />
        <option value="QuarkusRunConfigurationType" />
        <option value="SpringBootApplicationConfigurationType" />
      </set>
    </option>
  </component>
  <component name="RunManager" selected="Docker.docker-compose.yml: Compose Deployment">
    <configuration name="customer [clean]" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$/services/customer" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value="clean" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>false</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="customer-api | #1" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/customer-api.http" requestIdentifier="#1" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="product-api | Create Product" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/product-api.http" requestIdentifier="Create Product" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="ConfigServerApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="com.ecommer.config-server.main" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.ecommer.config.ConfigServerApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="CustomerApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="customer-service.main" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.ecommer.customer.CustomerApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="DiscoveryApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" temporary="true" nameIsGenerated="true">
      <module name="discovery-server.main" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.ecommer.discovery.DiscoveryApplication" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.ecommer.discovery.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="OrderServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="order-service.main" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.ecommer.order.OrderServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ProductApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="product-service.main" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.ecommer.product.ProductApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Docker.docker-compose.yml: Compose Deployment" />
      <item itemvalue="Gradle.customer [clean]" />
      <item itemvalue="HTTP Request.product-api | Create Product" />
      <item itemvalue="HTTP Request.customer-api | #1" />
      <item itemvalue="Spring Boot.OrderServiceApplication" />
      <item itemvalue="Spring Boot.ConfigServerApplication" />
      <item itemvalue="Spring Boot.CustomerApplication" />
      <item itemvalue="Spring Boot.ProductApplication" />
      <item itemvalue="Spring Boot.DiscoveryApplication" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Spring Boot.DiscoveryApplication" />
        <item itemvalue="Gradle.customer [clean]" />
        <item itemvalue="HTTP Request.product-api | Create Product" />
        <item itemvalue="Docker.docker-compose.yml: Compose Deployment" />
        <item itemvalue="HTTP Request.customer-api | #1" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-jdk-9f38398b9061-39b83d9b5494-intellij.indexing.shared.core-IU-241.18034.62" />
        <option value="bundled-js-predefined-1d06a55b98c1-0b3e54e931b4-JavaScript-IU-241.18034.62" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="5a6ed731-85d6-4a0e-b159-d2ef8b33e2f8" name="Changes" comment="" />
      <created>1720103310235</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1720103310235</updated>
      <workItem from="1720103311650" duration="5648000" />
      <workItem from="1720112642931" duration="263000" />
      <workItem from="1720112916073" duration="1072000" />
      <workItem from="1720160953536" duration="2099000" />
      <workItem from="1720169809849" duration="38000" />
      <workItem from="1720169857695" duration="10023000" />
      <workItem from="1720188848373" duration="3358000" />
      <workItem from="1720411811681" duration="40000" />
      <workItem from="1720942386986" duration="3759000" />
      <workItem from="1720953897865" duration="7095000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="completely product service" />
    <option name="LAST_COMMIT_MESSAGE" value="completely product service" />
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>